#!/bin/sh

if [ ! -f /usr/local/bin/brew ]; then
  echo "Homebrew is not installed."
  printf "Install Homebrew? (Y/N) "
  read -r response
  if [ "$response" = "Y" ] || [ "$response" = "y" ]; then
    # command from: https://brew.sh
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
  fi
fi

# Install my dotfiles
# Note that this script is stored *in* my dotfiles, so needs to be curled from
# GitHub on first run, then deleted (to stay up to date)
if [ ! -d "$HOME"/.dotfiles ]; then
  printf "Clone dotfiles? (Y/N) "
  read -r response
  if [ "$response" = "Y" ] || [ "$response" = "y" ]; then
    cd "$HOME" || exit 1
    git clone https://github.com/adammck/dotfiles.git .dotfiles
    ls -1AF .dotfiles | grep -v /$ | grep -Fv README.md | xargs -I{} -n1 ln -sf .dotfiles/{} .
    cd - || exit 1
  fi
fi

# Install my brews
# These are stored in `~/.Brewfile`, which is a symlink into `.dotfiles`.
printf "Run Homebrew? (Y/N) "
read -r response
if [ "$response" = "Y" ] || [ "$response" = "y" ]; then
  brew bundle --global install
fi

# Set up config syncing (via iCloud Drive) for misc apps
SYNC_ROOT="$HOME"/Library/Mobile\ Documents/com\~apple\~CloudDocs/Sync
if [ -d "$SYNC_ROOT" ]; then
  printf "Set up config sync? (Y/N) "
  read -r response
  if [ "$response" = "Y" ] || [ "$response" = "y" ]; then

    # Sublime Text
    LOCAL="$HOME"/Library/Application\ Support/Sublime\ Text\ 3/Packages/User
    if [ ! -L "$LOCAL" ]; then
      trash "$LOCAL" # Okay to fail
      ln -s "$SYNC_ROOT"/Sublime\ Text/User "$LOCAL"
    fi

    # OpenEmu
    LOCAL="$HOME"/Library/Application\ Support/OpenEmu
    if [ ! -L "$LOCAL" ]; then
      trash "$LOCAL" # Okay to fail
      ln -s "$SYNC_ROOT"/OpenEmu "$LOCAL"
    fi

    # Alfred
    # (Using config sync feature, not symlink)
    defaults write com.runningwithcrayons.Alfred-Preferences syncfolder -string "$SYNC_ROOT/Alfred"
  fi
fi

# Use Brew-installed bash as default login shell
# TODO(adammck): Support /opt/homebrew for ARM machines
if [ "$SHELL" != "/usr/local/bin/bash" ]; then
  printf "Set default login shell? (Y/N) "
  read -r response
  if [ "$response" = "Y" ] || [ "$response" = "y" ]; then
    if ! grep -q /usr/local/bin/bash /etc/shells; then
      echo "/usr/local/bin/bash" | sudo tee -a /etc/shells
    fi

    chsh -s /usr/local/bin/bash
  fi
fi

# For reference, see:
# https://github.com/mathiasbynens/dotfiles/blob/master/.macos

printf "Configure MacOS defaults? (Y/N) "
read -r response
if [ "$response" = "Y" ] || [ "$response" = "y" ]; then
  ~/.dotfiles/bin/provision-mac-defaults
fi
